inside -- initialization.initialization
nm pop:[('s_name', 'sum'), ('Kathan', '4')]
global_min_instance_dict: {'course_info': [('student_sr_no', 'course', 'credits', 's_name'), (22645, 'DAA', 4, 'Kathan')], 'student_info': [('sr_no', 'name', 'dept_name'), (22645, 'Alaap', 'CSA')]}
... checking for:  [('course_info', 'student_sr_no'), ('student_info', 'sr_no')]
Join attr :[['student_sr_no', 'sr_no']]
course_info
student_info
ecp [[22645 'DAA' 4 'Kathan']]
attr ist :[22645]
er: [[22645 'DAA' 4 'Kathan']]
er1: [[22646 'DAA' 4 'Kathan']]
in del
attr ist :['DAA']
attr ist :[4]
er: [[22645 'DAA' 4 'Kathan']]
er1: [[22645 'DAA' 5 'Kathan']]
attr ist :['Kathan']
ecp [[22645 'Alaap' 'CSA']]
attr ist :[22645]
er: [[22645 'Alaap' 'CSA']]
er1: [[22646 'Alaap' 'CSA']]
in del
attr ist :['Alaap']
attr ist :['CSA']
course_info
student_info
er: [[22645 'DAA' 4 'Kathan']]
er1: [[22644 'DAA' 4 'Kathan']]
in del
er: [[22645 'DAA' 4 'Kathan']]
er1: [[22645 'DAA' 3 'Kathan']]
er: [[22645 'Alaap' 'CSA']]
er1: [[22644 'Alaap' 'CSA']]
in del
GB []
Cannot find group by attributes. 
Temp1 is [('s_name', 'sum'), ('Kathan', '4')]
tab: ['course_info', 'student_info']
 attr: ['student_sr_no', 'sr_no']
attr : student_sr_no tab: course_info
[(1, 'DAA', 4, 'Kathan')]
attr : sr_no tab: student_info
[(1, 'Alaap', 'CSA')]
Temp2 is [('s_name', 'sum'), ('Kathan', '4')]
Table1 is ([(1, 'Alaap', 'CSA')], (Column(name='sr_no', type_code=23), Column(name='name', type_code=1043), Column(name='dept_name', type_code=1043))) and Table2 is ([(1, 'DAA', 4, 'Kathan')], (Column(name='student_sr_no', type_code=23), Column(name='course', type_code=1043), Column(name='credits', type_code=23), Column(name='s_name', type_code=1043)))
size bef loop: 1
size: 1
size: 1
res in low: [('s_name', 'sum'), ('Kathan', '-2147483648')]
No lower bound on credits
size bef: 1
tp :[(1, 'DAA', 4, 'Kathan', 1)]
size: 1
emp : [(1, 'DAA', 2147483647, 'Kathan', 1)]
res in upp : [('s_name', 'sum')]
iter: 1
upper bound exists on credits
Actual val 4
New val is 4
tmp = ([(1, 'DAA', 4, 'Kathan', 1)], (Column(name='student_sr_no', type_code=23), Column(name='course', type_code=1043), Column(name='credits', type_code=23), Column(name='s_name', type_code=1043), Column(name='checking', type_code=23)))
Sum bound is 4
Actual val 4
New val is 4
Avg bound is 4.0000000000000000
size bef loop: 1
having: [['course_info', 'credits', 'min', '<=', 2147483647, 4]]
Check is ([], [['course_info', 'credits', 'min', '<=', 2147483647, 4]])
Projected Attrib ['s_name', 'credits']
Dependencies [[('identical_expr_nc', 's_name')], [('identical_expr_nc', 'credits')]]
ele being checked s_name 0
Simple Projection, Continue
ele being checked credits 1
Simple Projection, Continue
Result ['s_name', 'sum'] ['s_name', 'credits'] [[], []] [[], []]
Cannot find aggregations.
min(credits) <= 4
inside:   reveal_proc_support.refine_Query
=========== Extracted Query =============
Select s_name, credits as sum
From course_info, student_info
Where student_sr_no = sr_no and 
Having min(credits) <= 4
Order By s_name desc
Limit 3;

--------------Extraction Time per Module in the Pipeline------------------:
From Clause:                          225 ms.
Correlated Sampling:                  0 ms.
View Minimization:                    0 ms.
New Minimization:Where Clause:        43 ms.
Projection:                           51 ms.
Group BY:                             1 ms.
Aggregation:                          39 ms.
Order by:                             0 ms.
Limit:                                2 ms.
Number of Times Executable called:    0
